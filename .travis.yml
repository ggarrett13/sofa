language: c
sudo: required

# Do not build branches of the form "pr/*". By prefixing pull requests coming
# from branches inside the repository with pr/, this avoids building both the
# branch push _and_ the pull request.
branches:
  except: /pr\/.*/

before_install:
  - chmod +x ./.travis_scripts/conda_setup.sh
  - chmod +x ./.travis_scripts/lib_version.sh
  - chmod +x ./.travis_scripts/build_test.sh
  - chmod +x ./.travis_scripts/deploy.sh
  #  - sudo apt-get update
#  - chmod +x ./tools/install_deps.sh
#  - chmod +x ./tools/install_travis.sh

#  - sudo apt-get -y install libxml2-dev


matrix:
  include:
    - env: BUILD_TYPE="OSXDebug"
      os: osx
      osx_image: xcode9.4
    - env: BUILD_TYPE="OSXRelease"
      os: osx
      osx_image: xcode9.4

jobs:
  include:
    - stage: "Install dependencies and setup"
    - name: "Install miniconda 3"
      script: ./.travis_scripts/install_miniconda.sh
    - name: "Initialise conda"
      script: ./.travis_scripts/conda_setup.sh
    - name: "Get lib versions"
      script: ./.travis_scripts/lib_version.sh
    - name: "Download and install miniconda"
      script: ./.travis_scripts/conda_setup.sh
    - stage: "Build, test and deploy (master/develop)"
      script: ./.travis_scripts/build_test.sh
    - stage: "Deploy (master/develop)"
      script: ./.travis_scripts/deploy.sh

#    - stage: ""
#     script:
#        - mkdir build
#        - cd build
#        # NOTE: currently, travis does not stop automatically if one of these
#        # 2 scripts returns an error code. Thus, we run them together as a single
#        # command, so that if install_deps.sh fails the whole build fails immediately
#        # rather than executing install_travis.sh as well. See
#        # https://github.com/travis-ci/travis-ci/issues/1066
#        - ../tools/install_deps.sh && ../tools/install_travis.sh


#notifications:
#  email: false
#  webhooks:
#    urls:
#      - https://webhooks.gitter.im/e/4e99a1581d9b99397e5f
#    on_success: change  # options: [always|never|change] default: always
#    on_failure: always  # options: [always|never|change] default: always
#    on_start: never     # options: [always|never|change] default: always